name: Contract Tests

on:
  push:
    branches: [ main ]
  pull_request:
  schedule:
    - cron: "0 3 * * *"

jobs:
  contract:
    runs-on: ubuntu-latest
    env:
      MOCK_JIRA_BASE_URL: http://127.0.0.1:9000
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install -r requirements-contract.txt

      - name: Start mock server
        run: |
          mock-jira-server --host 0.0.0.0 --port 9000 &
          echo $! > mock_server.pid
          python - <<'PY'
          import time
          import urllib.request

          for _ in range(60):
              try:
                  with urllib.request.urlopen('http://127.0.0.1:9000/docs', timeout=2):
                      break
              except Exception:
                  time.sleep(1)
          else:
              raise SystemExit("Mock Jira server did not become ready in time")
          PY

      - name: Fetch OpenAPI
        run: python scripts/fetch_openapi.py

      #- name: Bundle OpenAPI
      #  run: python scripts/bundle_openapi.py

      - name: Run contract tests
        run: |
          pytest -q tests/contract || true
        env:
          PYTEST_ADDOPTS: -q
          MOCK_JIRA_BASE_URL: ${{ env.MOCK_JIRA_BASE_URL }}

      - name: Enforce 95% threshold & publish artifacts
        if: always()
        run: python scripts/parity_report.py artifacts/parity.json

      - name: Upload parity artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: parity-report
          path: artifacts/*

      - name: Stop mock server
        if: always()
        run: |
          kill $(cat mock_server.pid)
          rm mock_server.pid
