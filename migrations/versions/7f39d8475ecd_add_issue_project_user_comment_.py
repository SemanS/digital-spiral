"""Add Issue, Project, User, Comment, Changelog models

Revision ID: 7f39d8475ecd
Revises: 9275e1fdb743
Create Date: 2025-10-03 14:49:25.231462

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7f39d8475ecd'
down_revision: Union[str, None] = '9275e1fdb743'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('project_key', sa.String(length=50), nullable=False),
    sa.Column('project_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('project_type', sa.String(length=50), nullable=False),
    sa.Column('lead_account_id', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('jira_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('jira_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['jira_instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_instance_id'), 'projects', ['instance_id'], unique=False)
    op.create_index('ix_projects_instance_key', 'projects', ['instance_id', 'project_key'], unique=True)
    op.create_index(op.f('ix_projects_is_archived'), 'projects', ['is_archived'], unique=False)
    op.create_index(op.f('ix_projects_project_id'), 'projects', ['project_id'], unique=False)
    op.create_index(op.f('ix_projects_project_key'), 'projects', ['project_key'], unique=False)
    op.create_index('ix_projects_raw_jsonb', 'projects', ['raw_jsonb'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_projects_tenant_id'), 'projects', ['tenant_id'], unique=False)
    op.create_index('ix_projects_tenant_instance', 'projects', ['tenant_id', 'instance_id'], unique=False)
    op.create_table('users',
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.String(length=100), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('jira_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('jira_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['jira_instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_account_id'), 'users', ['account_id'], unique=False)
    op.create_index(op.f('ix_users_email_address'), 'users', ['email_address'], unique=False)
    op.create_index('ix_users_instance_account', 'users', ['instance_id', 'account_id'], unique=True)
    op.create_index(op.f('ix_users_instance_id'), 'users', ['instance_id'], unique=False)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index('ix_users_raw_jsonb', 'users', ['raw_jsonb'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_index('ix_users_tenant_instance', 'users', ['tenant_id', 'instance_id'], unique=False)
    op.create_table('issues',
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('issue_key', sa.String(length=50), nullable=False),
    sa.Column('issue_id', sa.String(length=50), nullable=False),
    sa.Column('summary', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('description_format', sa.String(length=20), nullable=False),
    sa.Column('issue_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('status_category', sa.String(length=50), nullable=True),
    sa.Column('priority', sa.String(length=50), nullable=True),
    sa.Column('assignee_account_id', sa.String(length=100), nullable=True),
    sa.Column('reporter_account_id', sa.String(length=100), nullable=True),
    sa.Column('project_key', sa.String(length=50), nullable=False),
    sa.Column('parent_key', sa.String(length=50), nullable=True),
    sa.Column('labels', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('components', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('jira_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('jira_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('custom_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('raw_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sync_version', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['jira_instances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['issues.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_issues_assignee_account_id'), 'issues', ['assignee_account_id'], unique=False)
    op.create_index('ix_issues_custom_fields', 'issues', ['custom_fields'], unique=False, postgresql_using='gin')
    op.create_index('ix_issues_instance_assignee', 'issues', ['instance_id', 'assignee_account_id'], unique=False)
    op.create_index(op.f('ix_issues_instance_id'), 'issues', ['instance_id'], unique=False)
    op.create_index('ix_issues_instance_project', 'issues', ['instance_id', 'project_id'], unique=False)
    op.create_index('ix_issues_instance_status', 'issues', ['instance_id', 'status'], unique=False)
    op.create_index('ix_issues_instance_updated', 'issues', ['instance_id', 'jira_updated_at'], unique=False)
    op.create_index(op.f('ix_issues_issue_id'), 'issues', ['issue_id'], unique=False)
    op.create_index(op.f('ix_issues_issue_key'), 'issues', ['issue_key'], unique=True)
    op.create_index(op.f('ix_issues_issue_type'), 'issues', ['issue_type'], unique=False)
    op.create_index(op.f('ix_issues_jira_updated_at'), 'issues', ['jira_updated_at'], unique=False)
    op.create_index(op.f('ix_issues_parent_id'), 'issues', ['parent_id'], unique=False)
    op.create_index(op.f('ix_issues_parent_key'), 'issues', ['parent_key'], unique=False)
    op.create_index(op.f('ix_issues_priority'), 'issues', ['priority'], unique=False)
    op.create_index(op.f('ix_issues_project_id'), 'issues', ['project_id'], unique=False)
    op.create_index(op.f('ix_issues_project_key'), 'issues', ['project_key'], unique=False)
    op.create_index('ix_issues_raw_jsonb', 'issues', ['raw_jsonb'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_issues_reporter_account_id'), 'issues', ['reporter_account_id'], unique=False)
    op.create_index(op.f('ix_issues_status'), 'issues', ['status'], unique=False)
    op.create_index(op.f('ix_issues_tenant_id'), 'issues', ['tenant_id'], unique=False)
    op.create_index('ix_issues_tenant_instance', 'issues', ['tenant_id', 'instance_id'], unique=False)
    op.create_table('changelogs',
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('issue_id', sa.UUID(), nullable=False),
    sa.Column('changelog_id', sa.String(length=50), nullable=False),
    sa.Column('issue_key', sa.String(length=50), nullable=False),
    sa.Column('author_account_id', sa.String(length=100), nullable=False),
    sa.Column('items', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('jira_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['jira_instances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['issue_id'], ['issues.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_changelogs_author_account_id'), 'changelogs', ['author_account_id'], unique=False)
    op.create_index(op.f('ix_changelogs_changelog_id'), 'changelogs', ['changelog_id'], unique=False)
    op.create_index('ix_changelogs_instance_changelog', 'changelogs', ['instance_id', 'changelog_id'], unique=True)
    op.create_index(op.f('ix_changelogs_instance_id'), 'changelogs', ['instance_id'], unique=False)
    op.create_index('ix_changelogs_issue_created', 'changelogs', ['issue_id', 'jira_created_at'], unique=False)
    op.create_index(op.f('ix_changelogs_issue_id'), 'changelogs', ['issue_id'], unique=False)
    op.create_index(op.f('ix_changelogs_issue_key'), 'changelogs', ['issue_key'], unique=False)
    op.create_index('ix_changelogs_items', 'changelogs', ['items'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_changelogs_jira_created_at'), 'changelogs', ['jira_created_at'], unique=False)
    op.create_index('ix_changelogs_raw_jsonb', 'changelogs', ['raw_jsonb'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_changelogs_tenant_id'), 'changelogs', ['tenant_id'], unique=False)
    op.create_index('ix_changelogs_tenant_instance', 'changelogs', ['tenant_id', 'instance_id'], unique=False)
    op.create_table('comments',
    sa.Column('instance_id', sa.UUID(), nullable=False),
    sa.Column('issue_id', sa.UUID(), nullable=False),
    sa.Column('comment_id', sa.String(length=50), nullable=False),
    sa.Column('issue_key', sa.String(length=50), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('body_format', sa.String(length=20), nullable=False),
    sa.Column('author_account_id', sa.String(length=100), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('visibility_type', sa.String(length=50), nullable=True),
    sa.Column('visibility_value', sa.String(length=100), nullable=True),
    sa.Column('jira_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('jira_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('last_synced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['jira_instances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['issue_id'], ['issues.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_author_account_id'), 'comments', ['author_account_id'], unique=False)
    op.create_index(op.f('ix_comments_comment_id'), 'comments', ['comment_id'], unique=False)
    op.create_index('ix_comments_instance_comment', 'comments', ['instance_id', 'comment_id'], unique=True)
    op.create_index(op.f('ix_comments_instance_id'), 'comments', ['instance_id'], unique=False)
    op.create_index('ix_comments_issue_created', 'comments', ['issue_id', 'jira_created_at'], unique=False)
    op.create_index(op.f('ix_comments_issue_id'), 'comments', ['issue_id'], unique=False)
    op.create_index(op.f('ix_comments_issue_key'), 'comments', ['issue_key'], unique=False)
    op.create_index('ix_comments_raw_jsonb', 'comments', ['raw_jsonb'], unique=False, postgresql_using='gin')
    op.create_index(op.f('ix_comments_tenant_id'), 'comments', ['tenant_id'], unique=False)
    op.create_index('ix_comments_tenant_instance', 'comments', ['tenant_id', 'instance_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_comments_tenant_instance', table_name='comments')
    op.drop_index(op.f('ix_comments_tenant_id'), table_name='comments')
    op.drop_index('ix_comments_raw_jsonb', table_name='comments', postgresql_using='gin')
    op.drop_index(op.f('ix_comments_issue_key'), table_name='comments')
    op.drop_index(op.f('ix_comments_issue_id'), table_name='comments')
    op.drop_index('ix_comments_issue_created', table_name='comments')
    op.drop_index(op.f('ix_comments_instance_id'), table_name='comments')
    op.drop_index('ix_comments_instance_comment', table_name='comments')
    op.drop_index(op.f('ix_comments_comment_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_author_account_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index('ix_changelogs_tenant_instance', table_name='changelogs')
    op.drop_index(op.f('ix_changelogs_tenant_id'), table_name='changelogs')
    op.drop_index('ix_changelogs_raw_jsonb', table_name='changelogs', postgresql_using='gin')
    op.drop_index(op.f('ix_changelogs_jira_created_at'), table_name='changelogs')
    op.drop_index('ix_changelogs_items', table_name='changelogs', postgresql_using='gin')
    op.drop_index(op.f('ix_changelogs_issue_key'), table_name='changelogs')
    op.drop_index(op.f('ix_changelogs_issue_id'), table_name='changelogs')
    op.drop_index('ix_changelogs_issue_created', table_name='changelogs')
    op.drop_index(op.f('ix_changelogs_instance_id'), table_name='changelogs')
    op.drop_index('ix_changelogs_instance_changelog', table_name='changelogs')
    op.drop_index(op.f('ix_changelogs_changelog_id'), table_name='changelogs')
    op.drop_index(op.f('ix_changelogs_author_account_id'), table_name='changelogs')
    op.drop_table('changelogs')
    op.drop_index('ix_issues_tenant_instance', table_name='issues')
    op.drop_index(op.f('ix_issues_tenant_id'), table_name='issues')
    op.drop_index(op.f('ix_issues_status'), table_name='issues')
    op.drop_index(op.f('ix_issues_reporter_account_id'), table_name='issues')
    op.drop_index('ix_issues_raw_jsonb', table_name='issues', postgresql_using='gin')
    op.drop_index(op.f('ix_issues_project_key'), table_name='issues')
    op.drop_index(op.f('ix_issues_project_id'), table_name='issues')
    op.drop_index(op.f('ix_issues_priority'), table_name='issues')
    op.drop_index(op.f('ix_issues_parent_key'), table_name='issues')
    op.drop_index(op.f('ix_issues_parent_id'), table_name='issues')
    op.drop_index(op.f('ix_issues_jira_updated_at'), table_name='issues')
    op.drop_index(op.f('ix_issues_issue_type'), table_name='issues')
    op.drop_index(op.f('ix_issues_issue_key'), table_name='issues')
    op.drop_index(op.f('ix_issues_issue_id'), table_name='issues')
    op.drop_index('ix_issues_instance_updated', table_name='issues')
    op.drop_index('ix_issues_instance_status', table_name='issues')
    op.drop_index('ix_issues_instance_project', table_name='issues')
    op.drop_index(op.f('ix_issues_instance_id'), table_name='issues')
    op.drop_index('ix_issues_instance_assignee', table_name='issues')
    op.drop_index('ix_issues_custom_fields', table_name='issues', postgresql_using='gin')
    op.drop_index(op.f('ix_issues_assignee_account_id'), table_name='issues')
    op.drop_table('issues')
    op.drop_index('ix_users_tenant_instance', table_name='users')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index('ix_users_raw_jsonb', table_name='users', postgresql_using='gin')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_instance_id'), table_name='users')
    op.drop_index('ix_users_instance_account', table_name='users')
    op.drop_index(op.f('ix_users_email_address'), table_name='users')
    op.drop_index(op.f('ix_users_account_id'), table_name='users')
    op.drop_table('users')
    op.drop_index('ix_projects_tenant_instance', table_name='projects')
    op.drop_index(op.f('ix_projects_tenant_id'), table_name='projects')
    op.drop_index('ix_projects_raw_jsonb', table_name='projects', postgresql_using='gin')
    op.drop_index(op.f('ix_projects_project_key'), table_name='projects')
    op.drop_index(op.f('ix_projects_project_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_is_archived'), table_name='projects')
    op.drop_index('ix_projects_instance_key', table_name='projects')
    op.drop_index(op.f('ix_projects_instance_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
